/**
  * This program has been developed by students from the bachelor Computer Science at Utrecht University within the Software Project course.
  * Â© Copyright Utrecht University (Department of Information and Computing Sciences)
  *
  * This source code is licensed under the MIT license found in the
  * LICENSE file in the root directory of this source tree.
  */

import { ethers } from "hardhat"; 

export async function generateInterfaceIds() {
    const InterfaceIdsContract = await ethers.getContractFactory("InterfaceIds");
    const InterfaceIds : any = await InterfaceIdsContract.deploy();

    const InterfaceIdsKeys = Object.keys(InterfaceIds);
    let interfaceIdObj : { [id: string]: string; } = { };
    for (let i = 0; i < InterfaceIdsKeys.length; i++) {
        const key = InterfaceIdsKeys[i];

        // Every interface defined in this contract should end with _ID (used to distinct from other object properties generated by ethers/hardhat)
        if (!key.endsWith("_ID")) { continue; }

        // IERC165 is already included in the template, as this is required for the sdk to do safety checks
        if (key == "IERC165_ID") { continue; }

        interfaceIdObj[key.substring(0, key.length-3)] = await InterfaceIds[key].call();
    }
    return interfaceIdObj;
}