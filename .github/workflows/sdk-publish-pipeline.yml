name: Diamond Governance SDK publish

on:
  release:
    types: [published]

defaults:
  run:
    working-directory: ./

env:
  NODE_VERSION: 18.x
  npm-publish: ${{ github.event.inputs.js || true }}

jobs:
  install-dependencies:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: 'https://registry.npmjs.org'
      - run: npm ci
      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-build-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-
    
  npm-publish:
    runs-on: ubuntu-latest
    needs: install-dependencies
    steps:
      - uses: actions/checkout@v3
      - name: Restore cache
        uses: actions/cache@v3
        id: restore-node_modules
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-build-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: steps.restore-node_modules.outputs.cache-hit != 'true'
        run: npm install
      - name: Install typescript
        run: npm i typescript -g
      - name: Generate sdk
        run: npm run generate-sdk
      - name: Enter sdk directory
        run: cd sdk
      # Incrementing version should be done in a GitHub commit, otherwise the the package.json in GitHub will not be up to date
      # - name: Increment npm package version
      #   run: npm version minor --no-git-tag-version
      - name: Compile package
        run: tsc --declaration
      - name: Publish
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  
